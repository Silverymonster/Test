<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
           http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<mvc:annotation-driven>
		<mvc:message-converters
			register-defaults="true">
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="features">
					<list>
						<value>WriteMapNullValue</value>
						<value>QuoteFieldNames</value>
					</list>
				</property>
				<property name="dateFormat" value="yyyy-MM-dd HH:mm:ss" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 开启注解 -->
	<context:annotation-config />
	<!-- 自动扫描spring在JAVA中的注解 -->
	<context:component-scan base-package="myx">
		<!--把expression描述的除外 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 读取 properties 文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:httpclient.properties</value>
		</property>
	</bean>

	<!-- HttpClient链接处理 -->
	<bean id="poolingHttpClientConnectionManager"
		class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="${http.maxTotal}" />
		<!-- 设置每个主机的并发数 -->
		<property name="defaultMaxPerRoute"
			value="${http.defaultMaxPerRoute}" />
	</bean>

	<!-- HttpClient对象的构建器 -->
	<bean id="httpClientBuilder"
		class="org.apache.http.impl.client.HttpClientBuilder">
		<property name="connectionManager"
			ref="poolingHttpClientConnectionManager" />
	</bean>

	<!-- HttpClient对象 注意该对象需要设置scope="prototype":多例 -->
	<bean name="closeableHttpClient"
		class="org.apache.http.impl.client.CloseableHttpClient"
		factory-bean="httpClientBuilder" factory-method="build"
		scope="prototype" />

	<!-- 请求配置的构建器 -->
	<bean id="requestConfigBuilder"
		class="org.apache.http.client.config.RequestConfig.Builder">
		<!-- 创建连接的最长时间 -->
		<property name="connectTimeout"
			value="${http.connectTimeout}" />
		<!-- 从连接池中获取到连接的最长时间 -->
		<property name="connectionRequestTimeout"
			value="${http.connectionRequestTimeout}" />
		<!-- 数据传输的最长时间 -->
		<property name="socketTimeout" value="${http.socketTimeout}" />
		<!-- 提交请求前测试连接是否可用 -->
		<property name="staleConnectionCheckEnabled"
			value="${http.staleConnectionCheckEnabled}" />
	</bean>

	<!-- RequestConfig对象 Spring通过反射的方式去反向生成bean， factory-bean指向被反射的bean factory-method指向需要使用的反射方法 -->
	<bean name="requestConfig"
		class="org.apache.http.client.config.RequestConfig"
		factory-bean="requestConfigBuilder" factory-method="build" />

	<!-- 定期清理无效连接 -->
	<bean class="myx.Util.IdleConnectionEvictor">
		<constructor-arg index="0"
			ref="poolingHttpClientConnectionManager" />
	</bean>



</beans>